name: 'appark'

services:
  server:
    build:
      context: ./server
      args:
        NODE_ENV: development
    container_name: server_app
    command: sh -c "npm run seed && npm start"
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - DB_HOST=mariadb
      - REDIS_HOST=redis
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3001:3000"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_started

  client:
    build:
      context: ./client
      args:
        NODE_ENV: development
    container_name: client_app
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "5173:5173"
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    depends_on:
      - server

  mariadb:
    image: mariadb:10.11
    container_name: mariadb_app
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - ./server/src/database/db_schema.sql:/docker-entrypoint-initdb.d/init.sql
      - mariadb_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis_app
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mariadb_data:
    driver: local
