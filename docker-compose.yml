version: '3.8'

services:
  server:
    build:
      context: ./server
    container_name: server_app
    env_file:
      - ./.env
    environment:
      - MYSQL_HOST=${DB_HOST}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DB=${DB_NAME}
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - NODE_ENV=development
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules

  client:
    build:
      context: ./client
    container_name: client_app
    environment:
      - name=value
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - NODE_ENV=development
    ports:
      - "3001:5173"
    depends_on:
      - server
    networks:
      - app-network
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules

  mysql:
    image: mysql:8
    container_name: mysql_app
    env_file:
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      retries: 5
      timeout: 3s

  redis:
    image: redis:7
    container_name: redis_app
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
