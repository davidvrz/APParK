version: '3.8'

services:
  server:
    build:
      context: ./server
    container_name: server_app
    env_file:
      - ./.env
    environment:
      - MYSQL_HOST=$MYSQL_HOST
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_DB=$MYSQL_DB
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./server:/usr/src/app # ðŸ‘ˆ Volumen para el cÃ³digo backend
      - /usr/src/app/node_modules # ðŸ‘ˆ Ignora node_modules para evitar conflictos

  client:
    build:
      context: ./client
    container_name: client_app
    ports:
      - "3001:5173"
    depends_on:
      - server
    networks:
      - app-network
    volumes:
      - ./client:/usr/src/app # ðŸ‘ˆ Volumen para el cÃ³digo frontend
      - /usr/src/app/node_modules # ðŸ‘ˆ Ignora node_modules para evitar conflictos

  mysql:
    image: mysql:8
    container_name: mysql_app
    env_file:
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DB
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      retries: 5
      timeout: 3s

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
